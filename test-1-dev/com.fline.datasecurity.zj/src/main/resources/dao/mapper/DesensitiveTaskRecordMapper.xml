<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fline.datasecurity.zj.dao.mapper.DesensitiveTaskRecordMapper">
  <resultMap id="BaseResultMap" type="com.fline.datasecurity.zj.dao.entity.DesensitiveTaskRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="taskCode" jdbcType="VARCHAR" property="taskcode" />
    <result column="taskOperationTime" jdbcType="VARCHAR" property="taskoperationtime" />
    <result column="consumingTime" jdbcType="VARCHAR" property="consumingtime" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="operationUser" jdbcType="VARCHAR" property="operationuser" />
  </resultMap>
  <sql id="Base_Column_List">
    id, taskCode, taskOperationTime, consumingTime, state, operationUser
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from c_desensitization_task_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from c_desensitization_task_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fline.datasecurity.zj.dao.entity.DesensitiveTaskRecord">
    insert into c_desensitization_task_record (id, taskCode, taskOperationTime, 
      consumingTime, state, operationUser
      )
    values (#{id,jdbcType=INTEGER}, #{taskcode,jdbcType=VARCHAR}, #{taskoperationtime,jdbcType=VARCHAR}, 
      #{consumingtime,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{operationuser,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fline.datasecurity.zj.dao.entity.DesensitiveTaskRecord">
    insert into c_desensitization_task_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="taskcode != null">
        taskCode,
      </if>
      <if test="taskoperationtime != null">
        taskOperationTime,
      </if>
      <if test="consumingtime != null">
        consumingTime,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="operationuser != null">
        operationUser,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="taskcode != null">
        #{taskcode,jdbcType=VARCHAR},
      </if>
      <if test="taskoperationtime != null">
        #{taskoperationtime,jdbcType=VARCHAR},
      </if>
      <if test="consumingtime != null">
        #{consumingtime,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="operationuser != null">
        #{operationuser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fline.datasecurity.zj.dao.entity.DesensitiveTaskRecord">
    update c_desensitization_task_record
    <set>
      <if test="taskcode != null">
        taskCode = #{taskcode,jdbcType=VARCHAR},
      </if>
      <if test="taskoperationtime != null">
        taskOperationTime = #{taskoperationtime,jdbcType=VARCHAR},
      </if>
      <if test="consumingtime != null">
        consumingTime = #{consumingtime,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="operationuser != null">
        operationUser = #{operationuser,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fline.datasecurity.zj.dao.entity.DesensitiveTaskRecord">
    update c_desensitization_task_record
    set taskCode = #{taskcode,jdbcType=VARCHAR},
      taskOperationTime = #{taskoperationtime,jdbcType=VARCHAR},
      consumingTime = #{consumingtime,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      operationUser = #{operationuser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>